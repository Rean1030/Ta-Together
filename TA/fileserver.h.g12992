#ifndef FILESERVER_H
#define FILESERVER_H

#include <QObject>
#include <QtCore>
#include <QStandardPaths>
#include <QJsonDocument>
#include <QJsonArray>
#include <QJsonObject>
#include <QFile>

static const QString c_sUserName("用户名");
static const QString c_sProject("工程");

static const QString c_sProjectName("工程名称");

static const QString c_sTeamMembers("队员");
static const QString c_sUserRole("角色");
static const QString c_sSaveTime("保存时间");
static const QString c_sUserTaskLog("任务日志");
static const QString c_sLogDate("日志日期");

static const QString c_sTaskName("任务名称");
static const QString c_sPlannedTime("计划用时");
static const QString c_sUsedTime("已用工时");
static const QString c_sTimeFix("工时调差");
static const QString c_sStartTime("开始时间");
static const QString c_sTaskPercent("任务进度");
static const QString c_sTaskState("任务状态");
static const QString c_sPriority("优先级别");
static const QString c_sDifficulty("任务难度");

static QString c_sFile;

class FileServer : public QObject
{
    Q_OBJECT

public:
    explicit FileServer(QObject *parent = 0);

    bool readFile();
    bool writeFile();

    inline QJsonDocument getJsonDoc() {return m_oJsonDoc;}
    inline void setJsonDoc(QJsonDocument &jsonDoc) {m_oJsonDoc = jsonDoc;}

    QJsonValue getUserName();
    void setUserName(QJsonValue userName);
    void setTaskInf();

signals:

public slots:

private:
    QJsonDocument m_oJsonDoc;
    QJsonObject m_oJsonObj;
    QJsonValue m_oJsonUserName;
    QJsonValue m_oJsonCurProject;
    QJsonArray m_oJsonProjects;
};

#endif // FILESERVER_H
